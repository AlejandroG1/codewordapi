# Generated by Django 4.0.2 on 2022-03-26 22:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='restaurantes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_restaurant', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=1024)),
                ('restaurant_image', models.ImageField(blank=True, upload_to='media', verbose_name='view')),
            ],
        ),
        migrations.CreateModel(
            name='promociones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_promocion', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=1024)),
                ('promocion_image', models.ImageField(blank=True, upload_to='media', verbose_name='view')),
                ('restaurante_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.restaurantes')),
            ],
        ),
        migrations.CreateModel(
            name='menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_platillo', models.CharField(max_length=100)),
                ('ingredientes', models.CharField(max_length=1024)),
                ('restaurante_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.restaurantes')),
            ],
        ),
        migrations.CreateModel(
            name='booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_usuario', models.CharField(max_length=50)),
                ('apellido_usuario', models.CharField(max_length=50)),
                ('telefono', models.PositiveIntegerField()),
                ('email', models.CharField(max_length=30)),
                ('dia_hora_booking', models.DateTimeField()),
                ('solicitud_especial', models.CharField(max_length=1024)),
                ('number_people', models.PositiveIntegerField()),
                ('restaurante_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.restaurantes')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('cellphone', models.IntegerField()),
                ('username', models.CharField(max_length=15, unique=True)),
                ('permission', models.IntegerField(default=1)),
                ('status', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
